worker_processes auto;
events {
    worker_connections 1024;
}

stream {
    upstream emqx_cluster_tcp_backend {
        least_conn;
        server emqx1:1883 max_fails=3 fail_timeout=5s;
        server emqx2:1883 max_fails=3 fail_timeout=5s;
        server emqx3:1883 max_fails=3 fail_timeout=5s;
    }

    server {
        listen 1883;
        proxy_connect_timeout 5s;
        proxy_timeout 30s;
        proxy_pass emqx_cluster_tcp_backend;
    }
}

http {

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 10M;

    upstream emqx_cluster_ws_backend {
        least_conn;
        server emqx1:8083 max_fails=3 fail_timeout=5s;
        server emqx2:8083 max_fails=3 fail_timeout=5s;
        server emqx3:8083 max_fails=3 fail_timeout=5s;
    }


    server {
        listen 80;

        # 反代 WebSocket 到 EMQX
        location /mqtt {
            proxy_pass http://emqx_cluster_ws_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
        }

        # 健康检查/调试
        location = /health {
            return 200 "ok\n";
        }
    }

    upstream emqx_cluster_dashboard_backend {
        ip_hash;
        server emqx1:18083 max_fails=3 fail_timeout=30s;
        server emqx2:18083 max_fails=3 fail_timeout=30s;
        server emqx3:18083 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 18083;

        server_name localhost;

        location / {
            proxy_pass http://emqx_cluster_dashboard_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }
}